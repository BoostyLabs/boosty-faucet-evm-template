name: Deploy to server

run-name: Deploy to ${{ inputs.environment }} (${{ github.ref_name }})
on:
  # By default automatically deploy all pushes into the test environment
  # push:
  #   paths-ignore:
  #     - "README**"
  #   branches:
  #     - "**"
  #   tags:
  #     - "*"

  # Allows you to run this workflow manually with a button on the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to"
        required: true
        default: "develop"
        type: choice
        options:
          - develop
          - main
          - vd/redesign

concurrency: one-deploy-at-a-time

env:
  #ENV_NAME: ${{ inputs.environment }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_ECR }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ECR }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

  ECR_URL_FRONT: ${{ vars.ECR_URL_FAUCET }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  VM_IP: ${{ vars.VM_IP }}
  VM_USER: ${{ secrets.VM_USER }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ECR_URL_FAUCET }}:latest -f Dockerfile .

      - name: Push Docker image
        run: |
          docker push ${{ env.ECR_URL_FAUCET }}:latest
  
  

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ inputs.environment }}

    steps:
      - name: SSH into VM and Deploy Backend
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ env.VM_IP }}
          username: ${{ env.VM_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd faucet-evm-template
            ###git checkout ${{ inputs.environment }}
            ###git pull origin ${{ inputs.environment }}
            docker compose pull
            docker compose down
            docker compose up -d ##--build
            ###docker-compose restart        
